plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.poco'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone"}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	// Springdoc OpenAPI (Swagger)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

	// Lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	// jdbc
	implementation 'com.mysql:mysql-connector-j:8.3.0'

	// My SQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// spring AI
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:0.8.1'

}

// jar 파일 하나만 생성하게 하는거
jar {
	enabled = false
}


tasks.named('test') {
	useJUnitPlatform()
}
